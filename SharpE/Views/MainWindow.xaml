<controls:StyledWindow x:Class="SharpE.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:SharpE.Views"
        xmlns:viewModels="clr-namespace:SharpE.ViewModels"
        xmlns:controls="clr-namespace:SharpE.MvvmTools.Controls;assembly=MvvmTools"
        xmlns:helpers="clr-namespace:SharpE.MvvmTools.Helpers;assembly=MvvmTools"
        xmlns:converters="clr-namespace:SharpE.MvvmTools.Converters;assembly=MvvmTools"
        xmlns:project="clr-namespace:SharpE.Definitions.Project;assembly=Definitions"
        xmlns:contextMenu="clr-namespace:SharpE.ViewModels.ContextMenu"
        xmlns:controls1="clr-namespace:Common.MedRxCommonControls.Controls;assembly=MvvmTools"
        mc:Ignorable="d"
        Title="{Binding Path=Title}" Height="768" Width="1280" 
        d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
        Background="#222" Foreground="#CCC"
        helpers:InputBindingHelper.InputBindingSource="{Binding Path=KeyBindings}" 
        Icon="/SharpE;component/Resources/SharpE.ico"
        helpers:WindowClosingHelper.Closing="{Binding Path=ClosingTask}"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SharpE;component/Style/Style.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="SettingsMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                <Setter Property="Command" Value="{Binding DataContext.OpenFileViewModelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}}"/>
                <Setter Property="CommandParameter" Value="{Binding Path=Settings}"/>
                <Setter Property="Header" Value="{Binding Path=Name}"></Setter>
            </Style>
            <Style x:Key="MvvmMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" d:DataContext="{d:DesignInstance contextMenu:ContextmenuItemViewModel}">
                <Setter Property="Command" Value="{Binding Path=Command}"/>
                <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}"/>
                <Setter Property="Header" Value="{Binding Path=Name}"></Setter>
                <Setter Property="Visibility" Value="{Binding Path=IsVisable, Converter={converters:BoolValueConverter}}"></Setter>
                <Setter Property="ItemsSource" Value="{Binding Path=Children}"></Setter>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource MvvmMenuItemStyle}"></Setter>
                <Setter Property="Focusable" Value="False"></Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <controls:StyledWindow.XamlIcon>
        <TextBlock Text="#E" FontWeight="ExtraBold" Foreground="LightSkyBlue" FontStyle="Italic" Margin="5,2, 1,2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    </controls:StyledWindow.XamlIcon>
    <Grid>
        <Grid Background="#222">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="300" Width="Auto"></ColumnDefinition>
                <ColumnDefinition MinWidth="10" Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Menu IsMainMenu="True" Grid.ColumnSpan="3">
                <MenuItem Header="File">
                    <MenuItem Header="New File" Command="{Binding Path=NewFileCommand}" InputGestureText="Ctrl + N"/>
                    <MenuItem Header="Open file" Command="{Binding Path=OpenFileCommand}"/>
                    <MenuItem Header="Save file" Command="{Binding Path=SaveFileCommand}" />
                    <MenuItem Header="Save all files" Command="{Binding Path=SaveAllFilesCommand}" InputGestureText="Shift + Ctrl + S"/>
                    <Separator/>
                    <MenuItem Header="Open folder" Command="{Binding Path=OpenFolderCommand}"/>
                    <Separator/>
                    <MenuItem Header="Exit" Command="{Binding Path=ExitCommand}"/>
                </MenuItem>
                <MenuItem Header="Schema">
                    <MenuItem Header="Generate" Command="{Binding Path=GenerateSchemaCommand}"></MenuItem>
                </MenuItem>
                <MenuItem Header="Settings">
                    <MenuItem Header="General" Command="{Binding Path=OpenFileViewModelCommand}" CommandParameter="{Binding Path=Settings}"/>
                    <MenuItem Header="Editors" ItemsSource="{Binding Path=EditorManager.Editors}" ItemContainerStyle="{StaticResource SettingsMenuItemStyle}"/>
                    <MenuItem Header="Settings path" Command="{Binding Path=ChangeSettingsPathCommand}"></MenuItem>
                </MenuItem>
                <MenuItem Header="Help"></MenuItem>
            </Menu>
            <Border Grid.ColumnSpan="3" Grid.Row="1" Height="1" Margin="2" Background="#666"></Border>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TreeView x:Name="TreeView" ItemsSource="{Binding Path=Root.Children}" helpers:TreeViewHelper.SelectedItem="{Binding Path=SelectedNode, Mode=TwoWay}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                          helpers:TreeViewHelper.SelectWithRightClick="True" helpers:TreeViewHelper.BringSelecteIntoView="True">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.InputBindings>
                        <KeyBinding Gesture="F2" Command="{Binding Path=RenameSelectedNodeCommand}"></KeyBinding>
                        <KeyBinding Gesture="Enter" Command="{Binding Path=OpenFileViewModelCommand}" CommandParameter="{Binding Path=SelectedNode}" ></KeyBinding>
                        <KeyBinding Gesture="Delete" Command="{Binding Path=DeleteSelectedNodeCommand}"></KeyBinding>
                    </TreeView.InputBindings>
                    <TreeView.ContextMenu>
                        <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" ItemsSource="{Binding Path=CurrentTreeContextMenu.MenuItems}" ItemContainerStyle="{StaticResource MvvmMenuItemStyle}" Focusable="False">

                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}" DataType="{x:Type project:ITreeNode}">
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Name}" helpers:MouseHelper.MouseDoubleClick="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.OpenFileViewModelCommand}" Visibility="{Binding Path=IsRenaming, Converter={converters:BoolValueConverter}, ConverterParameter=false}"/>    
                                    <TextBlock Text="*" Visibility="{Binding Path=HasUnsavedChanges, Converter={converters:BoolValueConverter}}"></TextBlock>
                                </StackPanel>
                                
                                <Border Visibility="{Binding Path=IsRenaming, Converter={converters:BoolValueConverter}}" Background="{StaticResource BackgroundBrush}">
                                    <TextBox Text="{Binding Path=RenameString, UpdateSourceTrigger=PropertyChanged}" helpers:MouseHelper.MouseDoubleClick="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=DataContext.OpenFileViewModelCommand}" 
                                             helpers:FocusHelper.IsFocus="{Binding Path=IsRenaming}" helpers:TextBoxHelper.SelectAllOnFocus="True" helpers:TextBoxHelper.SelectionWithOutExstension="True">
                                        <TextBox.InputBindings>
                                            <KeyBinding Gesture="Esc" Command="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=DataContext.RenameSelectedNodeCancelCommand}"></KeyBinding>
                                            <KeyBinding Gesture="Enter" Command="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=DataContext.RenameSelectedNodeDoneCommand}"></KeyBinding>
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </Border>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
                <Border Grid.Row="1" Height="2" Background="#FF0080C0"></Border>
                <ListView Grid.Row="2" ItemsSource="{Binding Path=TabTrees}" SelectedItem="{Binding Path=SelectedTabTree}" SelectionMode="Single" Style="{StaticResource TabeListView}">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Background="#222" Margin="0"></StackPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding }" Foreground="White" Margin="3,0"></TextBlock>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Stretch" >
                <GridSplitter.Template>
                    <ControlTemplate>
                        <Border Width="5" Padding="2" Background="Transparent">
                            <Border Background="#666"></Border>
                        </Border>
                    </ControlTemplate>
                </GridSplitter.Template>
            </GridSplitter>
            <Grid Grid.Column="2" Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <controls1:HorizontalEdgeButtonScroll StepSize="150">
                        <ListView ItemsSource="{Binding Path=Openfiles}" SelectedItem="{Binding Path=SelectedFile}" SelectionMode="Single" Style="{StaticResource TabeListView}">
                            <ListView.ContextMenu>
                                <ContextMenu  DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" ItemsSource="{Binding Path=TabsContextMenuViewModel.MenuItems}" Focusable="False" ItemContainerStyle="{StaticResource MvvmMenuItemStyle}"></ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" Background="#222" Margin="0"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border ToolTip="{Binding Path=Path}" Margin="0" Padding="0">
                                        <StackPanel Orientation="Horizontal" Margin="4,0,4,0">
                                            <!--<Ellipse Width="8" Height="8" Margin="0,5,2,2" VerticalAlignment="Center" Fill="{Binding Path=ValidationState, Converter={viewModels:ValidationStateValueConverter}}" Visibility="{Binding Path=ValidationState, Converter={converters:InvertedEnumBoolConverter}, ConverterParameter={x:Static definition:ValidationState.Undefined}}" Stroke="{StaticResource BackgroundBrush}" StrokeThickness="1" ></Ellipse>-->
                                            <TextBlock Text="{Binding Path=Name}" Foreground="White" VerticalAlignment="Center" MinHeight="10" Margin="0"></TextBlock>
                                            <TextBlock Text="*" Visibility="{Binding Path=HasUnsavedChanges, Converter={converters:BoolValueConverter}}"></TextBlock>
                                            <Button Content="X" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}, Path=DataContext.CloseFileCommand}" CommandParameter="{Binding }" Style="{StaticResource IconButtonNoFrame}" Margin="2,0,0,0"></Button>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </controls1:HorizontalEdgeButtonScroll>
                    <Button Grid.Column="1" Click="ButtonBase_OnClick" x:Name="OpenHiddenFileButton" Width="18">
                        <StackPanel VerticalAlignment="Center">
                            <Path Data="M 0 0 L 8 0 L 8 2 L 0 2 Z" Stretch="Fill" Fill="{StaticResource ForgroundBrush}" Margin="0,0,0,2"/>
                            <Path Data="M 0 0 L 8 0 L 4 4 Z" Stretch="Fill" Fill="{StaticResource ForgroundBrush}"/>
                        </StackPanel>
                    </Button>
                    <Popup Placement="Bottom" x:Name="Popup" PlacementTarget="{Binding ElementName=OpenHiddenFileButton}" StaysOpen="False">
                        <Border BorderBrush="{StaticResource BetweenBrush}" BorderThickness="1" Padding="1">
                            <ListView ItemsSource="{Binding Path=Openfiles}" SelectedItem="{Binding SelectedFile}">
                            </ListView>
                        </Border>
                    </Popup>
                </Grid>
                <Border Grid.Row="1" Background="#FF0080C0" Height="2" Visibility="{Binding Path=Openfiles.Count, Converter={converters:ExpresionConverter}, ConverterParameter=x}"></Border>
                <ContentControl Grid.Row="2" Content="{Binding Path=EditorView}"></ContentControl>
            </Grid>
        </Grid>
        <views:DialogView DataContext="{Binding Path=DialogViewModel}"></views:DialogView>
        <views:StyledMessageBoxView DataContext="{Binding Path=MessageBoxViewModel}"></views:StyledMessageBoxView>
    </Grid>
</controls:StyledWindow>
