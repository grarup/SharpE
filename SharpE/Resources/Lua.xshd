<?xml version="1.0" encoding="Windows-1252" ?>

<SyntaxDefinition name="Lua" extensions=".lua" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
  <Color name="Comment" foreground="Green" exampleText="// comment" />
	<Color name="String" foreground="#D69D85" exampleText="string text = &quot;Hello, World!&quot;"/>
	<Color name="Char" foreground="#D69D85" exampleText="char linefeed = '\n';"/>
	<Color name="Preprocessor" foreground="#9B9B9B" exampleText="#region Title" />
	<Color name="Punctuation" exampleText="a(b.c);" />
	<Color name="ValueTypeKeywords" fontWeight="bold" foreground="#569CD6" exampleText="bool b = true;" />
	<Color name="ReferenceTypeKeywords" foreground="#569CD6" exampleText="object o;" />
	<Color name="MethodCall" exampleText="o.ToString();"/>
	<Color name="NumberLiteral" foreground="#AFCEA8" exampleText="3.1415f"/>
	<Color name="ThisOrBaseReference" foreground="#569CD6" exampleText="this.Do(); base.Do();"/>
	<Color name="NullOrValueKeywords" foreground="#569CD6" exampleText="if (value == null)"/>
	<Color name="Keywords" foreground="#569CD6" exampleText="if (a) {} else {}"/>
	<Color name="GotoKeywords" foreground="#569CD6" exampleText="continue; return null;"/>
	<Color name="ContextKeywords" foreground="#569CD6" exampleText="var a = from x in y select z;"/>
	<Color name="ExceptionKeywords" foreground="#569CD6" exampleText="try {} catch {} finally {}"/>
	<Color name="CheckedKeyword" foreground="#569CD6" exampleText="checked {}"/>
	<Color name="UnsafeKeywords" foreground="#569CD6" exampleText="unsafe { fixed (..) {} }"/>
	<Color name="OperatorKeywords" foreground="#569CD6" exampleText="public static implicit operator..."/>
	<Color name="ParameterModifiers" foreground="#569CD6" exampleText="(ref int a, params int[] b)"/>
	<Color name="Modifiers" foreground="#569CD6" exampleText="static readonly int a;"/>
	<Color name="Visibility" foreground="#569CD6" exampleText="public override void ToString();"/>
	<Color name="NamespaceKeywords" foreground="#569CD6" exampleText="namespace A.B { using System; }"/>
	<Color name="GetSetAddRemove" foreground="#569CD6" exampleText="int Prop { get; set; }"/>
	<Color name="TrueFalse" foreground="#569CD6" exampleText="b = false; a = true;" />
	<Color name="TypeKeywords" foreground="#569CD6" exampleText="if (x is int) { a = x as int; type = typeof(int); size = sizeof(int); c = new object(); }"/>
  <RuleSet>
    <Span color="Comment" multiline="true">
      <Begin>--\[\[</Begin>
      <End>\]\]--</End>
    </Span>
    <Span color="Comment" ruleSet="comments set" multiline="false">
      <Begin>--</Begin>
    </Span>
    <Span foreground="Gray">
      <Begin>\#</Begin>
    </Span>
    <Span color="String">
      <Begin>"</Begin>
      <End>"</End>
      <RuleSet>
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>
    <Span color="String">
      <Begin>'</Begin>
      <End>'</End>
      <RuleSet>
        <Span begin="\\" end="." />
      </RuleSet>
    </Span>
    <Span foreground="#FFFF6600">
      <Begin>/(?!(\ ))</Begin>
      <End>/</End>
    </Span>
    <Keywords color="Keywords">
      <Word>class</Word>
    </Keywords>
    <Keywords color="Keywords">
      <Word>and</Word>
      <Word>break</Word>
      <Word>do</Word>
      <Word>else</Word>
      <Word>elseif</Word>
      <Word>end</Word>
      <Word>false</Word>
      <Word>for</Word>
      <Word>function</Word>
      <Word>if</Word>
      <Word>in</Word>
      <Word>local</Word>
      <Word>nil</Word>
      <Word>not</Word>
      <Word>or</Word>
      <Word>repeat</Word>
      <Word>return</Word>
      <Word>then</Word>
      <Word>true</Word>
      <Word>until</Word>
      <Word>while</Word>
    </Keywords>
  </RuleSet>
  <RuleSet name="comments set">
    <!-- allows nested /**/ comments, coloring them Green/Teal alternately -->
    <Span foreground="Teal" multiline="true">
      <Begin>--\[\[</Begin>
      <End>\]\]--</End>
      <RuleSet>
        <Span color="Comment" ruleSet="comments set" multiline="true">
          <Begin>--\[\[</Begin>
          <End>\]\]--</End>
        </Span>
      </RuleSet>
    </Span>
  </RuleSet>
</SyntaxDefinition>